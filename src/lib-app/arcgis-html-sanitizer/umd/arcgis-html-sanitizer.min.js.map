{"version":3,"sources":["webpack://Sanitizer/webpack/universalModuleDefinition","webpack://Sanitizer/webpack/bootstrap","webpack://Sanitizer/./node_modules/xss/lib/util.js","webpack://Sanitizer/./node_modules/cssfilter/lib/index.js","webpack://Sanitizer/./node_modules/xss/lib/parser.js","webpack://Sanitizer/./node_modules/cssfilter/lib/util.js","webpack://Sanitizer/./node_modules/cssfilter/lib/default.js","webpack://Sanitizer/./node_modules/xss/lib/default.js","webpack://Sanitizer/./node_modules/xss/lib/index.js","webpack://Sanitizer/./node_modules/lodash.isplainobject/index.js","webpack://Sanitizer/./node_modules/xss/lib/xss.js","webpack://Sanitizer/./node_modules/cssfilter/lib/parser.js","webpack://Sanitizer/./node_modules/cssfilter/lib/css.js","webpack://Sanitizer/./src/index.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","indexOf","arr","item","j","Array","length","forEach","fn","scope","trim","str","String","replace","spaceIndex","match","exec","index","DEFAULT","FilterCSS","html","options","process","filterCSS","_","getTagName","tagName","slice","toLowerCase","isClosing","REGEXP_ILLEGAL_ATTR_NAME","findNextEqual","findBeforeEqual","stripQuoteWrap","text","isQuoteWrapString","substr","parseTag","onTag","escapeHtml","rethtml","lastPos","tagStart","quoteStart","currentPos","len","currentTagName","currentHtml","charAt","parseAttr","onAttr","retAttrs","tmpName","addAttr","ret","push","test","join","trimRight","getDefaultWhiteList","whiteList","align-content","align-items","align-self","alignment-adjust","alignment-baseline","all","anchor-point","animation","animation-delay","animation-direction","animation-duration","animation-fill-mode","animation-iteration-count","animation-name","animation-play-state","animation-timing-function","azimuth","backface-visibility","background","background-attachment","background-clip","background-color","background-image","background-origin","background-position","background-repeat","background-size","baseline-shift","binding","bleed","bookmark-label","bookmark-level","bookmark-state","border","border-bottom","border-bottom-color","border-bottom-left-radius","border-bottom-right-radius","border-bottom-style","border-bottom-width","border-collapse","border-color","border-image","border-image-outset","border-image-repeat","border-image-slice","border-image-source","border-image-width","border-left","border-left-color","border-left-style","border-left-width","border-radius","border-right","border-right-color","border-right-style","border-right-width","border-spacing","border-style","border-top","border-top-color","border-top-left-radius","border-top-right-radius","border-top-style","border-top-width","border-width","bottom","box-decoration-break","box-shadow","box-sizing","box-snap","box-suppress","break-after","break-before","break-inside","caption-side","chains","clear","clip","clip-path","clip-rule","color","color-interpolation-filters","column-count","column-fill","column-gap","column-rule","column-rule-color","column-rule-style","column-rule-width","column-span","column-width","columns","contain","content","counter-increment","counter-reset","counter-set","crop","cue","cue-after","cue-before","cursor","direction","display","display-inside","display-list","display-outside","dominant-baseline","elevation","empty-cells","filter","flex","flex-basis","flex-direction","flex-flow","flex-grow","flex-shrink","flex-wrap","float","float-offset","flood-color","flood-opacity","flow-from","flow-into","font","font-family","font-feature-settings","font-kerning","font-language-override","font-size","font-size-adjust","font-stretch","font-style","font-synthesis","font-variant","font-variant-alternates","font-variant-caps","font-variant-east-asian","font-variant-ligatures","font-variant-numeric","font-variant-position","font-weight","grid","grid-area","grid-auto-columns","grid-auto-flow","grid-auto-rows","grid-column","grid-column-end","grid-column-start","grid-row","grid-row-end","grid-row-start","grid-template","grid-template-areas","grid-template-columns","grid-template-rows","hanging-punctuation","height","hyphens","icon","image-orientation","image-resolution","ime-mode","initial-letters","inline-box-align","justify-content","justify-items","justify-self","left","letter-spacing","lighting-color","line-box-contain","line-break","line-grid","line-height","line-snap","line-stacking","line-stacking-ruby","line-stacking-shift","line-stacking-strategy","list-style","list-style-image","list-style-position","list-style-type","margin","margin-bottom","margin-left","margin-right","margin-top","marker-offset","marker-side","marks","mask","mask-box","mask-box-outset","mask-box-repeat","mask-box-slice","mask-box-source","mask-box-width","mask-clip","mask-image","mask-origin","mask-position","mask-repeat","mask-size","mask-source-type","mask-type","max-height","max-lines","max-width","min-height","min-width","move-to","nav-down","nav-index","nav-left","nav-right","nav-up","object-fit","object-position","opacity","order","orphans","outline","outline-color","outline-offset","outline-style","outline-width","overflow","overflow-wrap","overflow-x","overflow-y","padding","padding-bottom","padding-left","padding-right","padding-top","page","page-break-after","page-break-before","page-break-inside","page-policy","pause","pause-after","pause-before","perspective","perspective-origin","pitch","pitch-range","play-during","position","presentation-level","quotes","region-fragment","resize","rest","rest-after","rest-before","richness","right","rotation","rotation-point","ruby-align","ruby-merge","ruby-position","shape-image-threshold","shape-outside","shape-margin","size","speak","speak-as","speak-header","speak-numeral","speak-punctuation","speech-rate","stress","string-set","tab-size","table-layout","text-align","text-align-last","text-combine-upright","text-decoration","text-decoration-color","text-decoration-line","text-decoration-skip","text-decoration-style","text-emphasis","text-emphasis-color","text-emphasis-position","text-emphasis-style","text-height","text-indent","text-justify","text-orientation","text-overflow","text-shadow","text-space-collapse","text-transform","text-underline-position","text-wrap","top","transform","transform-origin","transform-style","transition","transition-delay","transition-duration","transition-property","transition-timing-function","unicode-bidi","vertical-align","visibility","voice-balance","voice-duration","voice-family","voice-pitch","voice-range","voice-rate","voice-stress","voice-volume","volume","white-space","widows","width","will-change","word-break","word-spacing","word-wrap","wrap-flow","wrap-through","writing-mode","z-index","REGEXP_URL_JAVASCRIPT","onIgnoreAttr","safeAttrValue","getDefaultCSSWhiteList","a","abbr","address","area","article","aside","audio","b","bdi","bdo","big","blockquote","br","caption","center","cite","code","col","colgroup","dd","del","details","div","dl","dt","em","footer","h1","h2","h3","h4","h5","h6","header","hr","img","ins","li","mark","nav","ol","pre","section","small","span","sub","sup","strong","table","tbody","td","tfoot","th","thead","tr","tt","u","ul","video","defaultCSSFilter","REGEXP_LT","REGEXP_GT","REGEXP_QUOTE","REGEXP_QUOTE_2","REGEXP_ATTR_VALUE_1","REGEXP_ATTR_VALUE_COLON","REGEXP_ATTR_VALUE_NEWLINE","REGEXP_DEFAULT_ON_TAG_ATTR_4","REGEXP_DEFAULT_ON_TAG_ATTR_7","REGEXP_DEFAULT_ON_TAG_ATTR_8","escapeQuote","unescapeQuote","escapeHtmlEntities","fromCharCode","parseInt","escapeDangerHtml5Entities","clearNonPrintableCharacter","str2","charCodeAt","friendlyAttrValue","escapeAttrValue","STRIP_COMMENT_TAG_REGEXP","tag","onIgnoreTag","onTagAttr","onIgnoreTagAttr","cssFilter","lastIndex","onIgnoreTagStripAll","StripTagBody","tags","next","isRemoveAllTag","isArray","removeList","posStart","isRemoveTag","end","remove","pos","stripCommentTag","stripBlankChar","chars","split","char","parser","FilterXSS","filterXSS","objectTag","func","funcProto","Function","objectProto","funcToString","toString","objectCtorString","objectToString","getPrototype","getPrototypeOf","arg","isObjectLike","result","e","isHostObject","proto","Ctor","constructor","isNull","obj","undefined","shallowCopyObject","stripIgnoreTag","console","error","this","css","allowCommentTag","stripIgnoreTagBody","retHtml","sourcePosition","info","isWhite","attrs","closing","getAttrs","whiteAttrList","attrsHtml","isWhiteAttr","cssLength","isParenthesisOpen","retCSS","addNewAttr","source","parseStyle","check","RegExp","opts","xss__WEBPACK_IMPORTED_MODULE_1__","xss__WEBPACK_IMPORTED_MODULE_1___default","Sanitizer","filterOptions","extendDefaults","xssFilterOptions","_this","arcgisWhiteList","arcgisFilterOptions","create","keys","key","_extendObjectOfArrays","_xssFilter","sanitize","isNaN","isFinite","_iterateOverObject","validate","sanitized","isValid","objects","finalObj","concat","hasChanged_1","changedObj","reduce","prev","validation","lodash_isplainobject__WEBPACK_IMPORTED_MODULE_0___default","err"],"mappings":"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","file":"arcgis-html-sanitizer.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Sanitizer\"] = factory();\n\telse\n\t\troot[\"Sanitizer\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","module.exports = {\n  indexOf: function(arr, item) {\n    var i, j;\n    if (Array.prototype.indexOf) {\n      return arr.indexOf(item);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      if (arr[i] === item) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  forEach: function(arr, fn, scope) {\n    var i, j;\n    if (Array.prototype.forEach) {\n      return arr.forEach(fn, scope);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      fn.call(scope, arr[i], i, arr);\n    }\n  },\n  trim: function(str) {\n    if (String.prototype.trim) {\n      return str.trim();\n    }\n    return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n  },\n  spaceIndex: function(str) {\n    var reg = /\\s|\\n|\\t/;\n    var match = reg.exec(str);\n    return match ? match.index : -1;\n  }\n};\n","/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\nvar DEFAULT = require('./default');\nvar FilterCSS = require('./css');\n\n\n/**\n * XSS过滤\n *\n * @param {String} css 要过滤的CSS代码\n * @param {Object} options 选项：whiteList, onAttr, onIgnoreAttr\n * @return {String}\n */\nfunction filterCSS (html, options) {\n  var xss = new FilterCSS(options);\n  return xss.process(html);\n}\n\n\n// 输出\nexports = module.exports = filterCSS;\nexports.FilterCSS = FilterCSS;\nfor (var i in DEFAULT) exports[i] = DEFAULT[i];\n\n// 在浏览器端使用\nif (typeof window !== 'undefined') {\n  window.filterCSS = module.exports;\n}\n","/**\n * Simple HTML Parser\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar _ = require(\"./util\");\n\n/**\n * get tag name\n *\n * @param {String} html e.g. '<a hef=\"#\">'\n * @return {String}\n */\nfunction getTagName(html) {\n  var i = _.spaceIndex(html);\n  if (i === -1) {\n    var tagName = html.slice(1, -1);\n  } else {\n    var tagName = html.slice(1, i + 1);\n  }\n  tagName = _.trim(tagName).toLowerCase();\n  if (tagName.slice(0, 1) === \"/\") tagName = tagName.slice(1);\n  if (tagName.slice(-1) === \"/\") tagName = tagName.slice(0, -1);\n  return tagName;\n}\n\n/**\n * is close tag?\n *\n * @param {String} html 如：'<a hef=\"#\">'\n * @return {Boolean}\n */\nfunction isClosing(html) {\n  return html.slice(0, 2) === \"</\";\n}\n\n/**\n * parse input html and returns processed html\n *\n * @param {String} html\n * @param {Function} onTag e.g. function (sourcePosition, position, tag, html, isClosing)\n * @param {Function} escapeHtml\n * @return {String}\n */\nfunction parseTag(html, onTag, escapeHtml) {\n  \"user strict\";\n\n  var rethtml = \"\";\n  var lastPos = 0;\n  var tagStart = false;\n  var quoteStart = false;\n  var currentPos = 0;\n  var len = html.length;\n  var currentTagName = \"\";\n  var currentHtml = \"\";\n\n  for (currentPos = 0; currentPos < len; currentPos++) {\n    var c = html.charAt(currentPos);\n    if (tagStart === false) {\n      if (c === \"<\") {\n        tagStart = currentPos;\n        continue;\n      }\n    } else {\n      if (quoteStart === false) {\n        if (c === \"<\") {\n          rethtml += escapeHtml(html.slice(lastPos, currentPos));\n          tagStart = currentPos;\n          lastPos = currentPos;\n          continue;\n        }\n        if (c === \">\") {\n          rethtml += escapeHtml(html.slice(lastPos, tagStart));\n          currentHtml = html.slice(tagStart, currentPos + 1);\n          currentTagName = getTagName(currentHtml);\n          rethtml += onTag(\n            tagStart,\n            rethtml.length,\n            currentTagName,\n            currentHtml,\n            isClosing(currentHtml)\n          );\n          lastPos = currentPos + 1;\n          tagStart = false;\n          continue;\n        }\n        if ((c === '\"' || c === \"'\") && html.charAt(currentPos - 1) === \"=\") {\n          quoteStart = c;\n          continue;\n        }\n      } else {\n        if (c === quoteStart) {\n          quoteStart = false;\n          continue;\n        }\n      }\n    }\n  }\n  if (lastPos < html.length) {\n    rethtml += escapeHtml(html.substr(lastPos));\n  }\n\n  return rethtml;\n}\n\nvar REGEXP_ILLEGAL_ATTR_NAME = /[^a-zA-Z0-9_:\\.\\-]/gim;\n\n/**\n * parse input attributes and returns processed attributes\n *\n * @param {String} html e.g. `href=\"#\" target=\"_blank\"`\n * @param {Function} onAttr e.g. `function (name, value)`\n * @return {String}\n */\nfunction parseAttr(html, onAttr) {\n  \"user strict\";\n\n  var lastPos = 0;\n  var retAttrs = [];\n  var tmpName = false;\n  var len = html.length;\n\n  function addAttr(name, value) {\n    name = _.trim(name);\n    name = name.replace(REGEXP_ILLEGAL_ATTR_NAME, \"\").toLowerCase();\n    if (name.length < 1) return;\n    var ret = onAttr(name, value || \"\");\n    if (ret) retAttrs.push(ret);\n  }\n\n  // 逐个分析字符\n  for (var i = 0; i < len; i++) {\n    var c = html.charAt(i);\n    var v, j;\n    if (tmpName === false && c === \"=\") {\n      tmpName = html.slice(lastPos, i);\n      lastPos = i + 1;\n      continue;\n    }\n    if (tmpName !== false) {\n      if (\n        i === lastPos &&\n        (c === '\"' || c === \"'\") &&\n        html.charAt(i - 1) === \"=\"\n      ) {\n        j = html.indexOf(c, i + 1);\n        if (j === -1) {\n          break;\n        } else {\n          v = _.trim(html.slice(lastPos + 1, j));\n          addAttr(tmpName, v);\n          tmpName = false;\n          i = j;\n          lastPos = i + 1;\n          continue;\n        }\n      }\n    }\n    if (/\\s|\\n|\\t/.test(c)) {\n      html = html.replace(/\\s|\\n|\\t/g, \" \");\n      if (tmpName === false) {\n        j = findNextEqual(html, i);\n        if (j === -1) {\n          v = _.trim(html.slice(lastPos, i));\n          addAttr(v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          i = j - 1;\n          continue;\n        }\n      } else {\n        j = findBeforeEqual(html, i - 1);\n        if (j === -1) {\n          v = _.trim(html.slice(lastPos, i));\n          v = stripQuoteWrap(v);\n          addAttr(tmpName, v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          continue;\n        }\n      }\n    }\n  }\n\n  if (lastPos < html.length) {\n    if (tmpName === false) {\n      addAttr(html.slice(lastPos));\n    } else {\n      addAttr(tmpName, stripQuoteWrap(_.trim(html.slice(lastPos))));\n    }\n  }\n\n  return _.trim(retAttrs.join(\" \"));\n}\n\nfunction findNextEqual(str, i) {\n  for (; i < str.length; i++) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\n\nfunction findBeforeEqual(str, i) {\n  for (; i > 0; i--) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\n\nfunction isQuoteWrapString(text) {\n  if (\n    (text[0] === '\"' && text[text.length - 1] === '\"') ||\n    (text[0] === \"'\" && text[text.length - 1] === \"'\")\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction stripQuoteWrap(text) {\n  if (isQuoteWrapString(text)) {\n    return text.substr(1, text.length - 2);\n  } else {\n    return text;\n  }\n}\n\nexports.parseTag = parseTag;\nexports.parseAttr = parseAttr;\n","module.exports = {\n  indexOf: function (arr, item) {\n    var i, j;\n    if (Array.prototype.indexOf) {\n      return arr.indexOf(item);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      if (arr[i] === item) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  forEach: function (arr, fn, scope) {\n    var i, j;\n    if (Array.prototype.forEach) {\n      return arr.forEach(fn, scope);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      fn.call(scope, arr[i], i, arr);\n    }\n  },\n  trim: function (str) {\n    if (String.prototype.trim) {\n      return str.trim();\n    }\n    return str.replace(/(^\\s*)|(\\s*$)/g, '');\n  },\n  trimRight: function (str) {\n    if (String.prototype.trimRight) {\n      return str.trimRight();\n    }\n    return str.replace(/(\\s*$)/g, '');\n  }\n};\n","/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\nfunction getDefaultWhiteList () {\n  // 白名单值说明：\n  // true: 允许该属性\n  // Function: function (val) { } 返回true表示允许该属性，其他值均表示不允许\n  // RegExp: regexp.test(val) 返回true表示允许该属性，其他值均表示不允许\n  // 除上面列出的值外均表示不允许\n  var whiteList = {};\n\n  whiteList['align-content'] = false; // default: auto\n  whiteList['align-items'] = false; // default: auto\n  whiteList['align-self'] = false; // default: auto\n  whiteList['alignment-adjust'] = false; // default: auto\n  whiteList['alignment-baseline'] = false; // default: baseline\n  whiteList['all'] = false; // default: depending on individual properties\n  whiteList['anchor-point'] = false; // default: none\n  whiteList['animation'] = false; // default: depending on individual properties\n  whiteList['animation-delay'] = false; // default: 0\n  whiteList['animation-direction'] = false; // default: normal\n  whiteList['animation-duration'] = false; // default: 0\n  whiteList['animation-fill-mode'] = false; // default: none\n  whiteList['animation-iteration-count'] = false; // default: 1\n  whiteList['animation-name'] = false; // default: none\n  whiteList['animation-play-state'] = false; // default: running\n  whiteList['animation-timing-function'] = false; // default: ease\n  whiteList['azimuth'] = false; // default: center\n  whiteList['backface-visibility'] = false; // default: visible\n  whiteList['background'] = true; // default: depending on individual properties\n  whiteList['background-attachment'] = true; // default: scroll\n  whiteList['background-clip'] = true; // default: border-box\n  whiteList['background-color'] = true; // default: transparent\n  whiteList['background-image'] = true; // default: none\n  whiteList['background-origin'] = true; // default: padding-box\n  whiteList['background-position'] = true; // default: 0% 0%\n  whiteList['background-repeat'] = true; // default: repeat\n  whiteList['background-size'] = true; // default: auto\n  whiteList['baseline-shift'] = false; // default: baseline\n  whiteList['binding'] = false; // default: none\n  whiteList['bleed'] = false; // default: 6pt\n  whiteList['bookmark-label'] = false; // default: content()\n  whiteList['bookmark-level'] = false; // default: none\n  whiteList['bookmark-state'] = false; // default: open\n  whiteList['border'] = true; // default: depending on individual properties\n  whiteList['border-bottom'] = true; // default: depending on individual properties\n  whiteList['border-bottom-color'] = true; // default: current color\n  whiteList['border-bottom-left-radius'] = true; // default: 0\n  whiteList['border-bottom-right-radius'] = true; // default: 0\n  whiteList['border-bottom-style'] = true; // default: none\n  whiteList['border-bottom-width'] = true; // default: medium\n  whiteList['border-collapse'] = true; // default: separate\n  whiteList['border-color'] = true; // default: depending on individual properties\n  whiteList['border-image'] = true; // default: none\n  whiteList['border-image-outset'] = true; // default: 0\n  whiteList['border-image-repeat'] = true; // default: stretch\n  whiteList['border-image-slice'] = true; // default: 100%\n  whiteList['border-image-source'] = true; // default: none\n  whiteList['border-image-width'] = true; // default: 1\n  whiteList['border-left'] = true; // default: depending on individual properties\n  whiteList['border-left-color'] = true; // default: current color\n  whiteList['border-left-style'] = true; // default: none\n  whiteList['border-left-width'] = true; // default: medium\n  whiteList['border-radius'] = true; // default: 0\n  whiteList['border-right'] = true; // default: depending on individual properties\n  whiteList['border-right-color'] = true; // default: current color\n  whiteList['border-right-style'] = true; // default: none\n  whiteList['border-right-width'] = true; // default: medium\n  whiteList['border-spacing'] = true; // default: 0\n  whiteList['border-style'] = true; // default: depending on individual properties\n  whiteList['border-top'] = true; // default: depending on individual properties\n  whiteList['border-top-color'] = true; // default: current color\n  whiteList['border-top-left-radius'] = true; // default: 0\n  whiteList['border-top-right-radius'] = true; // default: 0\n  whiteList['border-top-style'] = true; // default: none\n  whiteList['border-top-width'] = true; // default: medium\n  whiteList['border-width'] = true; // default: depending on individual properties\n  whiteList['bottom'] = false; // default: auto\n  whiteList['box-decoration-break'] = true; // default: slice\n  whiteList['box-shadow'] = true; // default: none\n  whiteList['box-sizing'] = true; // default: content-box\n  whiteList['box-snap'] = true; // default: none\n  whiteList['box-suppress'] = true; // default: show\n  whiteList['break-after'] = true; // default: auto\n  whiteList['break-before'] = true; // default: auto\n  whiteList['break-inside'] = true; // default: auto\n  whiteList['caption-side'] = false; // default: top\n  whiteList['chains'] = false; // default: none\n  whiteList['clear'] = true; // default: none\n  whiteList['clip'] = false; // default: auto\n  whiteList['clip-path'] = false; // default: none\n  whiteList['clip-rule'] = false; // default: nonzero\n  whiteList['color'] = true; // default: implementation dependent\n  whiteList['color-interpolation-filters'] = true; // default: auto\n  whiteList['column-count'] = false; // default: auto\n  whiteList['column-fill'] = false; // default: balance\n  whiteList['column-gap'] = false; // default: normal\n  whiteList['column-rule'] = false; // default: depending on individual properties\n  whiteList['column-rule-color'] = false; // default: current color\n  whiteList['column-rule-style'] = false; // default: medium\n  whiteList['column-rule-width'] = false; // default: medium\n  whiteList['column-span'] = false; // default: none\n  whiteList['column-width'] = false; // default: auto\n  whiteList['columns'] = false; // default: depending on individual properties\n  whiteList['contain'] = false; // default: none\n  whiteList['content'] = false; // default: normal\n  whiteList['counter-increment'] = false; // default: none\n  whiteList['counter-reset'] = false; // default: none\n  whiteList['counter-set'] = false; // default: none\n  whiteList['crop'] = false; // default: auto\n  whiteList['cue'] = false; // default: depending on individual properties\n  whiteList['cue-after'] = false; // default: none\n  whiteList['cue-before'] = false; // default: none\n  whiteList['cursor'] = false; // default: auto\n  whiteList['direction'] = false; // default: ltr\n  whiteList['display'] = true; // default: depending on individual properties\n  whiteList['display-inside'] = true; // default: auto\n  whiteList['display-list'] = true; // default: none\n  whiteList['display-outside'] = true; // default: inline-level\n  whiteList['dominant-baseline'] = false; // default: auto\n  whiteList['elevation'] = false; // default: level\n  whiteList['empty-cells'] = false; // default: show\n  whiteList['filter'] = false; // default: none\n  whiteList['flex'] = false; // default: depending on individual properties\n  whiteList['flex-basis'] = false; // default: auto\n  whiteList['flex-direction'] = false; // default: row\n  whiteList['flex-flow'] = false; // default: depending on individual properties\n  whiteList['flex-grow'] = false; // default: 0\n  whiteList['flex-shrink'] = false; // default: 1\n  whiteList['flex-wrap'] = false; // default: nowrap\n  whiteList['float'] = false; // default: none\n  whiteList['float-offset'] = false; // default: 0 0\n  whiteList['flood-color'] = false; // default: black\n  whiteList['flood-opacity'] = false; // default: 1\n  whiteList['flow-from'] = false; // default: none\n  whiteList['flow-into'] = false; // default: none\n  whiteList['font'] = true; // default: depending on individual properties\n  whiteList['font-family'] = true; // default: implementation dependent\n  whiteList['font-feature-settings'] = true; // default: normal\n  whiteList['font-kerning'] = true; // default: auto\n  whiteList['font-language-override'] = true; // default: normal\n  whiteList['font-size'] = true; // default: medium\n  whiteList['font-size-adjust'] = true; // default: none\n  whiteList['font-stretch'] = true; // default: normal\n  whiteList['font-style'] = true; // default: normal\n  whiteList['font-synthesis'] = true; // default: weight style\n  whiteList['font-variant'] = true; // default: normal\n  whiteList['font-variant-alternates'] = true; // default: normal\n  whiteList['font-variant-caps'] = true; // default: normal\n  whiteList['font-variant-east-asian'] = true; // default: normal\n  whiteList['font-variant-ligatures'] = true; // default: normal\n  whiteList['font-variant-numeric'] = true; // default: normal\n  whiteList['font-variant-position'] = true; // default: normal\n  whiteList['font-weight'] = true; // default: normal\n  whiteList['grid'] = false; // default: depending on individual properties\n  whiteList['grid-area'] = false; // default: depending on individual properties\n  whiteList['grid-auto-columns'] = false; // default: auto\n  whiteList['grid-auto-flow'] = false; // default: none\n  whiteList['grid-auto-rows'] = false; // default: auto\n  whiteList['grid-column'] = false; // default: depending on individual properties\n  whiteList['grid-column-end'] = false; // default: auto\n  whiteList['grid-column-start'] = false; // default: auto\n  whiteList['grid-row'] = false; // default: depending on individual properties\n  whiteList['grid-row-end'] = false; // default: auto\n  whiteList['grid-row-start'] = false; // default: auto\n  whiteList['grid-template'] = false; // default: depending on individual properties\n  whiteList['grid-template-areas'] = false; // default: none\n  whiteList['grid-template-columns'] = false; // default: none\n  whiteList['grid-template-rows'] = false; // default: none\n  whiteList['hanging-punctuation'] = false; // default: none\n  whiteList['height'] = true; // default: auto\n  whiteList['hyphens'] = false; // default: manual\n  whiteList['icon'] = false; // default: auto\n  whiteList['image-orientation'] = false; // default: auto\n  whiteList['image-resolution'] = false; // default: normal\n  whiteList['ime-mode'] = false; // default: auto\n  whiteList['initial-letters'] = false; // default: normal\n  whiteList['inline-box-align'] = false; // default: last\n  whiteList['justify-content'] = false; // default: auto\n  whiteList['justify-items'] = false; // default: auto\n  whiteList['justify-self'] = false; // default: auto\n  whiteList['left'] = false; // default: auto\n  whiteList['letter-spacing'] = true; // default: normal\n  whiteList['lighting-color'] = true; // default: white\n  whiteList['line-box-contain'] = false; // default: block inline replaced\n  whiteList['line-break'] = false; // default: auto\n  whiteList['line-grid'] = false; // default: match-parent\n  whiteList['line-height'] = false; // default: normal\n  whiteList['line-snap'] = false; // default: none\n  whiteList['line-stacking'] = false; // default: depending on individual properties\n  whiteList['line-stacking-ruby'] = false; // default: exclude-ruby\n  whiteList['line-stacking-shift'] = false; // default: consider-shifts\n  whiteList['line-stacking-strategy'] = false; // default: inline-line-height\n  whiteList['list-style'] = true; // default: depending on individual properties\n  whiteList['list-style-image'] = true; // default: none\n  whiteList['list-style-position'] = true; // default: outside\n  whiteList['list-style-type'] = true; // default: disc\n  whiteList['margin'] = true; // default: depending on individual properties\n  whiteList['margin-bottom'] = true; // default: 0\n  whiteList['margin-left'] = true; // default: 0\n  whiteList['margin-right'] = true; // default: 0\n  whiteList['margin-top'] = true; // default: 0\n  whiteList['marker-offset'] = false; // default: auto\n  whiteList['marker-side'] = false; // default: list-item\n  whiteList['marks'] = false; // default: none\n  whiteList['mask'] = false; // default: border-box\n  whiteList['mask-box'] = false; // default: see individual properties\n  whiteList['mask-box-outset'] = false; // default: 0\n  whiteList['mask-box-repeat'] = false; // default: stretch\n  whiteList['mask-box-slice'] = false; // default: 0 fill\n  whiteList['mask-box-source'] = false; // default: none\n  whiteList['mask-box-width'] = false; // default: auto\n  whiteList['mask-clip'] = false; // default: border-box\n  whiteList['mask-image'] = false; // default: none\n  whiteList['mask-origin'] = false; // default: border-box\n  whiteList['mask-position'] = false; // default: center\n  whiteList['mask-repeat'] = false; // default: no-repeat\n  whiteList['mask-size'] = false; // default: border-box\n  whiteList['mask-source-type'] = false; // default: auto\n  whiteList['mask-type'] = false; // default: luminance\n  whiteList['max-height'] = true; // default: none\n  whiteList['max-lines'] = false; // default: none\n  whiteList['max-width'] = true; // default: none\n  whiteList['min-height'] = true; // default: 0\n  whiteList['min-width'] = true; // default: 0\n  whiteList['move-to'] = false; // default: normal\n  whiteList['nav-down'] = false; // default: auto\n  whiteList['nav-index'] = false; // default: auto\n  whiteList['nav-left'] = false; // default: auto\n  whiteList['nav-right'] = false; // default: auto\n  whiteList['nav-up'] = false; // default: auto\n  whiteList['object-fit'] = false; // default: fill\n  whiteList['object-position'] = false; // default: 50% 50%\n  whiteList['opacity'] = false; // default: 1\n  whiteList['order'] = false; // default: 0\n  whiteList['orphans'] = false; // default: 2\n  whiteList['outline'] = false; // default: depending on individual properties\n  whiteList['outline-color'] = false; // default: invert\n  whiteList['outline-offset'] = false; // default: 0\n  whiteList['outline-style'] = false; // default: none\n  whiteList['outline-width'] = false; // default: medium\n  whiteList['overflow'] = false; // default: depending on individual properties\n  whiteList['overflow-wrap'] = false; // default: normal\n  whiteList['overflow-x'] = false; // default: visible\n  whiteList['overflow-y'] = false; // default: visible\n  whiteList['padding'] = true; // default: depending on individual properties\n  whiteList['padding-bottom'] = true; // default: 0\n  whiteList['padding-left'] = true; // default: 0\n  whiteList['padding-right'] = true; // default: 0\n  whiteList['padding-top'] = true; // default: 0\n  whiteList['page'] = false; // default: auto\n  whiteList['page-break-after'] = false; // default: auto\n  whiteList['page-break-before'] = false; // default: auto\n  whiteList['page-break-inside'] = false; // default: auto\n  whiteList['page-policy'] = false; // default: start\n  whiteList['pause'] = false; // default: implementation dependent\n  whiteList['pause-after'] = false; // default: implementation dependent\n  whiteList['pause-before'] = false; // default: implementation dependent\n  whiteList['perspective'] = false; // default: none\n  whiteList['perspective-origin'] = false; // default: 50% 50%\n  whiteList['pitch'] = false; // default: medium\n  whiteList['pitch-range'] = false; // default: 50\n  whiteList['play-during'] = false; // default: auto\n  whiteList['position'] = false; // default: static\n  whiteList['presentation-level'] = false; // default: 0\n  whiteList['quotes'] = false; // default: text\n  whiteList['region-fragment'] = false; // default: auto\n  whiteList['resize'] = false; // default: none\n  whiteList['rest'] = false; // default: depending on individual properties\n  whiteList['rest-after'] = false; // default: none\n  whiteList['rest-before'] = false; // default: none\n  whiteList['richness'] = false; // default: 50\n  whiteList['right'] = false; // default: auto\n  whiteList['rotation'] = false; // default: 0\n  whiteList['rotation-point'] = false; // default: 50% 50%\n  whiteList['ruby-align'] = false; // default: auto\n  whiteList['ruby-merge'] = false; // default: separate\n  whiteList['ruby-position'] = false; // default: before\n  whiteList['shape-image-threshold'] = false; // default: 0.0\n  whiteList['shape-outside'] = false; // default: none\n  whiteList['shape-margin'] = false; // default: 0\n  whiteList['size'] = false; // default: auto\n  whiteList['speak'] = false; // default: auto\n  whiteList['speak-as'] = false; // default: normal\n  whiteList['speak-header'] = false; // default: once\n  whiteList['speak-numeral'] = false; // default: continuous\n  whiteList['speak-punctuation'] = false; // default: none\n  whiteList['speech-rate'] = false; // default: medium\n  whiteList['stress'] = false; // default: 50\n  whiteList['string-set'] = false; // default: none\n  whiteList['tab-size'] = false; // default: 8\n  whiteList['table-layout'] = false; // default: auto\n  whiteList['text-align'] = true; // default: start\n  whiteList['text-align-last'] = true; // default: auto\n  whiteList['text-combine-upright'] = true; // default: none\n  whiteList['text-decoration'] = true; // default: none\n  whiteList['text-decoration-color'] = true; // default: currentColor\n  whiteList['text-decoration-line'] = true; // default: none\n  whiteList['text-decoration-skip'] = true; // default: objects\n  whiteList['text-decoration-style'] = true; // default: solid\n  whiteList['text-emphasis'] = true; // default: depending on individual properties\n  whiteList['text-emphasis-color'] = true; // default: currentColor\n  whiteList['text-emphasis-position'] = true; // default: over right\n  whiteList['text-emphasis-style'] = true; // default: none\n  whiteList['text-height'] = true; // default: auto\n  whiteList['text-indent'] = true; // default: 0\n  whiteList['text-justify'] = true; // default: auto\n  whiteList['text-orientation'] = true; // default: mixed\n  whiteList['text-overflow'] = true; // default: clip\n  whiteList['text-shadow'] = true; // default: none\n  whiteList['text-space-collapse'] = true; // default: collapse\n  whiteList['text-transform'] = true; // default: none\n  whiteList['text-underline-position'] = true; // default: auto\n  whiteList['text-wrap'] = true; // default: normal\n  whiteList['top'] = false; // default: auto\n  whiteList['transform'] = false; // default: none\n  whiteList['transform-origin'] = false; // default: 50% 50% 0\n  whiteList['transform-style'] = false; // default: flat\n  whiteList['transition'] = false; // default: depending on individual properties\n  whiteList['transition-delay'] = false; // default: 0s\n  whiteList['transition-duration'] = false; // default: 0s\n  whiteList['transition-property'] = false; // default: all\n  whiteList['transition-timing-function'] = false; // default: ease\n  whiteList['unicode-bidi'] = false; // default: normal\n  whiteList['vertical-align'] = false; // default: baseline\n  whiteList['visibility'] = false; // default: visible\n  whiteList['voice-balance'] = false; // default: center\n  whiteList['voice-duration'] = false; // default: auto\n  whiteList['voice-family'] = false; // default: implementation dependent\n  whiteList['voice-pitch'] = false; // default: medium\n  whiteList['voice-range'] = false; // default: medium\n  whiteList['voice-rate'] = false; // default: normal\n  whiteList['voice-stress'] = false; // default: normal\n  whiteList['voice-volume'] = false; // default: medium\n  whiteList['volume'] = false; // default: medium\n  whiteList['white-space'] = false; // default: normal\n  whiteList['widows'] = false; // default: 2\n  whiteList['width'] = true; // default: auto\n  whiteList['will-change'] = false; // default: auto\n  whiteList['word-break'] = true; // default: normal\n  whiteList['word-spacing'] = true; // default: normal\n  whiteList['word-wrap'] = true; // default: normal\n  whiteList['wrap-flow'] = false; // default: auto\n  whiteList['wrap-through'] = false; // default: wrap\n  whiteList['writing-mode'] = false; // default: horizontal-tb\n  whiteList['z-index'] = false; // default: auto\n\n  return whiteList;\n}\n\n\n/**\n * 匹配到白名单上的一个属性时\n *\n * @param {String} name\n * @param {String} value\n * @param {Object} options\n * @return {String}\n */\nfunction onAttr (name, value, options) {\n  // do nothing\n}\n\n/**\n * 匹配到不在白名单上的一个属性时\n *\n * @param {String} name\n * @param {String} value\n * @param {Object} options\n * @return {String}\n */\nfunction onIgnoreAttr (name, value, options) {\n  // do nothing\n}\n\nvar REGEXP_URL_JAVASCRIPT = /javascript\\s*\\:/img;\n\n/**\n * 过滤属性值\n *\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction safeAttrValue(name, value) {\n  if (REGEXP_URL_JAVASCRIPT.test(value)) return '';\n  return value;\n}\n\n\nexports.whiteList = getDefaultWhiteList();\nexports.getDefaultWhiteList = getDefaultWhiteList;\nexports.onAttr = onAttr;\nexports.onIgnoreAttr = onIgnoreAttr;\nexports.safeAttrValue = safeAttrValue;\n","/**\n * default settings\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar FilterCSS = require(\"cssfilter\").FilterCSS;\nvar getDefaultCSSWhiteList = require(\"cssfilter\").getDefaultWhiteList;\nvar _ = require(\"./util\");\n\nfunction getDefaultWhiteList() {\n  return {\n    a: [\"target\", \"href\", \"title\"],\n    abbr: [\"title\"],\n    address: [],\n    area: [\"shape\", \"coords\", \"href\", \"alt\"],\n    article: [],\n    aside: [],\n    audio: [\"autoplay\", \"controls\", \"loop\", \"preload\", \"src\"],\n    b: [],\n    bdi: [\"dir\"],\n    bdo: [\"dir\"],\n    big: [],\n    blockquote: [\"cite\"],\n    br: [],\n    caption: [],\n    center: [],\n    cite: [],\n    code: [],\n    col: [\"align\", \"valign\", \"span\", \"width\"],\n    colgroup: [\"align\", \"valign\", \"span\", \"width\"],\n    dd: [],\n    del: [\"datetime\"],\n    details: [\"open\"],\n    div: [],\n    dl: [],\n    dt: [],\n    em: [],\n    font: [\"color\", \"size\", \"face\"],\n    footer: [],\n    h1: [],\n    h2: [],\n    h3: [],\n    h4: [],\n    h5: [],\n    h6: [],\n    header: [],\n    hr: [],\n    i: [],\n    img: [\"src\", \"alt\", \"title\", \"width\", \"height\"],\n    ins: [\"datetime\"],\n    li: [],\n    mark: [],\n    nav: [],\n    ol: [],\n    p: [],\n    pre: [],\n    s: [],\n    section: [],\n    small: [],\n    span: [],\n    sub: [],\n    sup: [],\n    strong: [],\n    table: [\"width\", \"border\", \"align\", \"valign\"],\n    tbody: [\"align\", \"valign\"],\n    td: [\"width\", \"rowspan\", \"colspan\", \"align\", \"valign\"],\n    tfoot: [\"align\", \"valign\"],\n    th: [\"width\", \"rowspan\", \"colspan\", \"align\", \"valign\"],\n    thead: [\"align\", \"valign\"],\n    tr: [\"rowspan\", \"align\", \"valign\"],\n    tt: [],\n    u: [],\n    ul: [],\n    video: [\"autoplay\", \"controls\", \"loop\", \"preload\", \"src\", \"height\", \"width\"]\n  };\n}\n\nvar defaultCSSFilter = new FilterCSS();\n\n/**\n * default onTag function\n *\n * @param {String} tag\n * @param {String} html\n * @param {Object} options\n * @return {String}\n */\nfunction onTag(tag, html, options) {\n  // do nothing\n}\n\n/**\n * default onIgnoreTag function\n *\n * @param {String} tag\n * @param {String} html\n * @param {Object} options\n * @return {String}\n */\nfunction onIgnoreTag(tag, html, options) {\n  // do nothing\n}\n\n/**\n * default onTagAttr function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction onTagAttr(tag, name, value) {\n  // do nothing\n}\n\n/**\n * default onIgnoreTagAttr function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction onIgnoreTagAttr(tag, name, value) {\n  // do nothing\n}\n\n/**\n * default escapeHtml function\n *\n * @param {String} html\n */\nfunction escapeHtml(html) {\n  return html.replace(REGEXP_LT, \"&lt;\").replace(REGEXP_GT, \"&gt;\");\n}\n\n/**\n * default safeAttrValue function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @param {Object} cssFilter\n * @return {String}\n */\nfunction safeAttrValue(tag, name, value, cssFilter) {\n  // unescape attribute value firstly\n  value = friendlyAttrValue(value);\n\n  if (name === \"href\" || name === \"src\") {\n    // filter `href` and `src` attribute\n    // only allow the value that starts with `http://` | `https://` | `mailto:` | `/` | `#`\n    value = _.trim(value);\n    if (value === \"#\") return \"#\";\n    if (\n      !(\n        value.substr(0, 7) === \"http://\" ||\n        value.substr(0, 8) === \"https://\" ||\n        value.substr(0, 7) === \"mailto:\" ||\n        value.substr(0, 4) === \"tel:\" ||\n        value[0] === \"#\" ||\n        value[0] === \"/\"\n      )\n    ) {\n      return \"\";\n    }\n  } else if (name === \"background\") {\n    // filter `background` attribute (maybe no use)\n    // `javascript:`\n    REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {\n      return \"\";\n    }\n  } else if (name === \"style\") {\n    // `expression()`\n    REGEXP_DEFAULT_ON_TAG_ATTR_7.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_7.test(value)) {\n      return \"\";\n    }\n    // `url()`\n    REGEXP_DEFAULT_ON_TAG_ATTR_8.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_8.test(value)) {\n      REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;\n      if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {\n        return \"\";\n      }\n    }\n    if (cssFilter !== false) {\n      cssFilter = cssFilter || defaultCSSFilter;\n      value = cssFilter.process(value);\n    }\n  }\n\n  // escape `<>\"` before returns\n  value = escapeAttrValue(value);\n  return value;\n}\n\n// RegExp list\nvar REGEXP_LT = /</g;\nvar REGEXP_GT = />/g;\nvar REGEXP_QUOTE = /\"/g;\nvar REGEXP_QUOTE_2 = /&quot;/g;\nvar REGEXP_ATTR_VALUE_1 = /&#([a-zA-Z0-9]*);?/gim;\nvar REGEXP_ATTR_VALUE_COLON = /&colon;?/gim;\nvar REGEXP_ATTR_VALUE_NEWLINE = /&newline;?/gim;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_3 = /\\/\\*|\\*\\//gm;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_4 = /((j\\s*a\\s*v\\s*a|v\\s*b|l\\s*i\\s*v\\s*e)\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t\\s*|m\\s*o\\s*c\\s*h\\s*a)\\:/gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_5 = /^[\\s\"'`]*(d\\s*a\\s*t\\s*a\\s*)\\:/gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_6 = /^[\\s\"'`]*(d\\s*a\\s*t\\s*a\\s*)\\:\\s*image\\//gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_7 = /e\\s*x\\s*p\\s*r\\s*e\\s*s\\s*s\\s*i\\s*o\\s*n\\s*\\(.*/gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_8 = /u\\s*r\\s*l\\s*\\(.*/gi;\n\n/**\n * escape doube quote\n *\n * @param {String} str\n * @return {String} str\n */\nfunction escapeQuote(str) {\n  return str.replace(REGEXP_QUOTE, \"&quot;\");\n}\n\n/**\n * unescape double quote\n *\n * @param {String} str\n * @return {String} str\n */\nfunction unescapeQuote(str) {\n  return str.replace(REGEXP_QUOTE_2, '\"');\n}\n\n/**\n * escape html entities\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeHtmlEntities(str) {\n  return str.replace(REGEXP_ATTR_VALUE_1, function replaceUnicode(str, code) {\n    return code[0] === \"x\" || code[0] === \"X\"\n      ? String.fromCharCode(parseInt(code.substr(1), 16))\n      : String.fromCharCode(parseInt(code, 10));\n  });\n}\n\n/**\n * escape html5 new danger entities\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeDangerHtml5Entities(str) {\n  return str\n    .replace(REGEXP_ATTR_VALUE_COLON, \":\")\n    .replace(REGEXP_ATTR_VALUE_NEWLINE, \" \");\n}\n\n/**\n * clear nonprintable characters\n *\n * @param {String} str\n * @return {String}\n */\nfunction clearNonPrintableCharacter(str) {\n  var str2 = \"\";\n  for (var i = 0, len = str.length; i < len; i++) {\n    str2 += str.charCodeAt(i) < 32 ? \" \" : str.charAt(i);\n  }\n  return _.trim(str2);\n}\n\n/**\n * get friendly attribute value\n *\n * @param {String} str\n * @return {String}\n */\nfunction friendlyAttrValue(str) {\n  str = unescapeQuote(str);\n  str = escapeHtmlEntities(str);\n  str = escapeDangerHtml5Entities(str);\n  str = clearNonPrintableCharacter(str);\n  return str;\n}\n\n/**\n * unescape attribute value\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeAttrValue(str) {\n  str = escapeQuote(str);\n  str = escapeHtml(str);\n  return str;\n}\n\n/**\n * `onIgnoreTag` function for removing all the tags that are not in whitelist\n */\nfunction onIgnoreTagStripAll() {\n  return \"\";\n}\n\n/**\n * remove tag body\n * specify a `tags` list, if the tag is not in the `tags` list then process by the specify function (optional)\n *\n * @param {array} tags\n * @param {function} next\n */\nfunction StripTagBody(tags, next) {\n  if (typeof next !== \"function\") {\n    next = function() {};\n  }\n\n  var isRemoveAllTag = !Array.isArray(tags);\n  function isRemoveTag(tag) {\n    if (isRemoveAllTag) return true;\n    return _.indexOf(tags, tag) !== -1;\n  }\n\n  var removeList = [];\n  var posStart = false;\n\n  return {\n    onIgnoreTag: function(tag, html, options) {\n      if (isRemoveTag(tag)) {\n        if (options.isClosing) {\n          var ret = \"[/removed]\";\n          var end = options.position + ret.length;\n          removeList.push([\n            posStart !== false ? posStart : options.position,\n            end\n          ]);\n          posStart = false;\n          return ret;\n        } else {\n          if (!posStart) {\n            posStart = options.position;\n          }\n          return \"[removed]\";\n        }\n      } else {\n        return next(tag, html, options);\n      }\n    },\n    remove: function(html) {\n      var rethtml = \"\";\n      var lastPos = 0;\n      _.forEach(removeList, function(pos) {\n        rethtml += html.slice(lastPos, pos[0]);\n        lastPos = pos[1];\n      });\n      rethtml += html.slice(lastPos);\n      return rethtml;\n    }\n  };\n}\n\n/**\n * remove html comments\n *\n * @param {String} html\n * @return {String}\n */\nfunction stripCommentTag(html) {\n  return html.replace(STRIP_COMMENT_TAG_REGEXP, \"\");\n}\nvar STRIP_COMMENT_TAG_REGEXP = /<!--[\\s\\S]*?-->/g;\n\n/**\n * remove invisible characters\n *\n * @param {String} html\n * @return {String}\n */\nfunction stripBlankChar(html) {\n  var chars = html.split(\"\");\n  chars = chars.filter(function(char) {\n    var c = char.charCodeAt(0);\n    if (c === 127) return false;\n    if (c <= 31) {\n      if (c === 10 || c === 13) return true;\n      return false;\n    }\n    return true;\n  });\n  return chars.join(\"\");\n}\n\nexports.whiteList = getDefaultWhiteList();\nexports.getDefaultWhiteList = getDefaultWhiteList;\nexports.onTag = onTag;\nexports.onIgnoreTag = onIgnoreTag;\nexports.onTagAttr = onTagAttr;\nexports.onIgnoreTagAttr = onIgnoreTagAttr;\nexports.safeAttrValue = safeAttrValue;\nexports.escapeHtml = escapeHtml;\nexports.escapeQuote = escapeQuote;\nexports.unescapeQuote = unescapeQuote;\nexports.escapeHtmlEntities = escapeHtmlEntities;\nexports.escapeDangerHtml5Entities = escapeDangerHtml5Entities;\nexports.clearNonPrintableCharacter = clearNonPrintableCharacter;\nexports.friendlyAttrValue = friendlyAttrValue;\nexports.escapeAttrValue = escapeAttrValue;\nexports.onIgnoreTagStripAll = onIgnoreTagStripAll;\nexports.StripTagBody = StripTagBody;\nexports.stripCommentTag = stripCommentTag;\nexports.stripBlankChar = stripBlankChar;\nexports.cssFilter = defaultCSSFilter;\nexports.getDefaultCSSWhiteList = getDefaultCSSWhiteList;\n","/**\n * xss\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar DEFAULT = require(\"./default\");\nvar parser = require(\"./parser\");\nvar FilterXSS = require(\"./xss\");\n\n/**\n * filter xss function\n *\n * @param {String} html\n * @param {Object} options { whiteList, onTag, onTagAttr, onIgnoreTag, onIgnoreTagAttr, safeAttrValue, escapeHtml }\n * @return {String}\n */\nfunction filterXSS(html, options) {\n  var xss = new FilterXSS(options);\n  return xss.process(html);\n}\n\nexports = module.exports = filterXSS;\nexports.FilterXSS = FilterXSS;\nfor (var i in DEFAULT) exports[i] = DEFAULT[i];\nfor (var i in parser) exports[i] = parser[i];\n\n// using `xss` on the browser, output `filterXSS` to the globals\nif (typeof window !== \"undefined\") {\n  window.filterXSS = module.exports;\n}\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n","/**\n * filter xss\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar FilterCSS = require(\"cssfilter\").FilterCSS;\nvar DEFAULT = require(\"./default\");\nvar parser = require(\"./parser\");\nvar parseTag = parser.parseTag;\nvar parseAttr = parser.parseAttr;\nvar _ = require(\"./util\");\n\n/**\n * returns `true` if the input value is `undefined` or `null`\n *\n * @param {Object} obj\n * @return {Boolean}\n */\nfunction isNull(obj) {\n  return obj === undefined || obj === null;\n}\n\n/**\n * get attributes for a tag\n *\n * @param {String} html\n * @return {Object}\n *   - {String} html\n *   - {Boolean} closing\n */\nfunction getAttrs(html) {\n  var i = _.spaceIndex(html);\n  if (i === -1) {\n    return {\n      html: \"\",\n      closing: html[html.length - 2] === \"/\"\n    };\n  }\n  html = _.trim(html.slice(i + 1, -1));\n  var isClosing = html[html.length - 1] === \"/\";\n  if (isClosing) html = _.trim(html.slice(0, -1));\n  return {\n    html: html,\n    closing: isClosing\n  };\n}\n\n/**\n * shallow copy\n *\n * @param {Object} obj\n * @return {Object}\n */\nfunction shallowCopyObject(obj) {\n  var ret = {};\n  for (var i in obj) {\n    ret[i] = obj[i];\n  }\n  return ret;\n}\n\n/**\n * FilterXSS class\n *\n * @param {Object} options\n *        whiteList, onTag, onTagAttr, onIgnoreTag,\n *        onIgnoreTagAttr, safeAttrValue, escapeHtml\n *        stripIgnoreTagBody, allowCommentTag, stripBlankChar\n *        css{whiteList, onAttr, onIgnoreAttr} `css=false` means don't use `cssfilter`\n */\nfunction FilterXSS(options) {\n  options = shallowCopyObject(options || {});\n\n  if (options.stripIgnoreTag) {\n    if (options.onIgnoreTag) {\n      console.error(\n        'Notes: cannot use these two options \"stripIgnoreTag\" and \"onIgnoreTag\" at the same time'\n      );\n    }\n    options.onIgnoreTag = DEFAULT.onIgnoreTagStripAll;\n  }\n\n  options.whiteList = options.whiteList || DEFAULT.whiteList;\n  options.onTag = options.onTag || DEFAULT.onTag;\n  options.onTagAttr = options.onTagAttr || DEFAULT.onTagAttr;\n  options.onIgnoreTag = options.onIgnoreTag || DEFAULT.onIgnoreTag;\n  options.onIgnoreTagAttr = options.onIgnoreTagAttr || DEFAULT.onIgnoreTagAttr;\n  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;\n  options.escapeHtml = options.escapeHtml || DEFAULT.escapeHtml;\n  this.options = options;\n\n  if (options.css === false) {\n    this.cssFilter = false;\n  } else {\n    options.css = options.css || {};\n    this.cssFilter = new FilterCSS(options.css);\n  }\n}\n\n/**\n * start process and returns result\n *\n * @param {String} html\n * @return {String}\n */\nFilterXSS.prototype.process = function(html) {\n  // compatible with the input\n  html = html || \"\";\n  html = html.toString();\n  if (!html) return \"\";\n\n  var me = this;\n  var options = me.options;\n  var whiteList = options.whiteList;\n  var onTag = options.onTag;\n  var onIgnoreTag = options.onIgnoreTag;\n  var onTagAttr = options.onTagAttr;\n  var onIgnoreTagAttr = options.onIgnoreTagAttr;\n  var safeAttrValue = options.safeAttrValue;\n  var escapeHtml = options.escapeHtml;\n  var cssFilter = me.cssFilter;\n\n  // remove invisible characters\n  if (options.stripBlankChar) {\n    html = DEFAULT.stripBlankChar(html);\n  }\n\n  // remove html comments\n  if (!options.allowCommentTag) {\n    html = DEFAULT.stripCommentTag(html);\n  }\n\n  // if enable stripIgnoreTagBody\n  var stripIgnoreTagBody = false;\n  if (options.stripIgnoreTagBody) {\n    var stripIgnoreTagBody = DEFAULT.StripTagBody(\n      options.stripIgnoreTagBody,\n      onIgnoreTag\n    );\n    onIgnoreTag = stripIgnoreTagBody.onIgnoreTag;\n  }\n\n  var retHtml = parseTag(\n    html,\n    function(sourcePosition, position, tag, html, isClosing) {\n      var info = {\n        sourcePosition: sourcePosition,\n        position: position,\n        isClosing: isClosing,\n        isWhite: whiteList.hasOwnProperty(tag)\n      };\n\n      // call `onTag()`\n      var ret = onTag(tag, html, info);\n      if (!isNull(ret)) return ret;\n\n      if (info.isWhite) {\n        if (info.isClosing) {\n          return \"</\" + tag + \">\";\n        }\n\n        var attrs = getAttrs(html);\n        var whiteAttrList = whiteList[tag];\n        var attrsHtml = parseAttr(attrs.html, function(name, value) {\n          // call `onTagAttr()`\n          var isWhiteAttr = _.indexOf(whiteAttrList, name) !== -1;\n          var ret = onTagAttr(tag, name, value, isWhiteAttr);\n          if (!isNull(ret)) return ret;\n\n          if (isWhiteAttr) {\n            // call `safeAttrValue()`\n            value = safeAttrValue(tag, name, value, cssFilter);\n            if (value) {\n              return name + '=\"' + value + '\"';\n            } else {\n              return name;\n            }\n          } else {\n            // call `onIgnoreTagAttr()`\n            var ret = onIgnoreTagAttr(tag, name, value, isWhiteAttr);\n            if (!isNull(ret)) return ret;\n            return;\n          }\n        });\n\n        // build new tag html\n        var html = \"<\" + tag;\n        if (attrsHtml) html += \" \" + attrsHtml;\n        if (attrs.closing) html += \" /\";\n        html += \">\";\n        return html;\n      } else {\n        // call `onIgnoreTag()`\n        var ret = onIgnoreTag(tag, html, info);\n        if (!isNull(ret)) return ret;\n        return escapeHtml(html);\n      }\n    },\n    escapeHtml\n  );\n\n  // if enable stripIgnoreTagBody\n  if (stripIgnoreTagBody) {\n    retHtml = stripIgnoreTagBody.remove(retHtml);\n  }\n\n  return retHtml;\n};\n\nmodule.exports = FilterXSS;\n","/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\nvar _ = require('./util');\n\n\n/**\n * 解析style\n *\n * @param {String} css\n * @param {Function} onAttr 处理属性的函数\n *   参数格式： function (sourcePosition, position, name, value, source)\n * @return {String}\n */\nfunction parseStyle (css, onAttr) {\n  css = _.trimRight(css);\n  if (css[css.length - 1] !== ';') css += ';';\n  var cssLength = css.length;\n  var isParenthesisOpen = false;\n  var lastPos = 0;\n  var i = 0;\n  var retCSS = '';\n\n  function addNewAttr () {\n    // 如果没有正常的闭合圆括号，则直接忽略当前属性\n    if (!isParenthesisOpen) {\n      var source = _.trim(css.slice(lastPos, i));\n      var j = source.indexOf(':');\n      if (j !== -1) {\n        var name = _.trim(source.slice(0, j));\n        var value = _.trim(source.slice(j + 1));\n        // 必须有属性名称\n        if (name) {\n          var ret = onAttr(lastPos, retCSS.length, name, value, source);\n          if (ret) retCSS += ret + '; ';\n        }\n      }\n    }\n    lastPos = i + 1;\n  }\n\n  for (; i < cssLength; i++) {\n    var c = css[i];\n    if (c === '/' && css[i + 1] === '*') {\n      // 备注开始\n      var j = css.indexOf('*/', i + 2);\n      // 如果没有正常的备注结束，则后面的部分全部跳过\n      if (j === -1) break;\n      // 直接将当前位置调到备注结尾，并且初始化状态\n      i = j + 1;\n      lastPos = i + 1;\n      isParenthesisOpen = false;\n    } else if (c === '(') {\n      isParenthesisOpen = true;\n    } else if (c === ')') {\n      isParenthesisOpen = false;\n    } else if (c === ';') {\n      if (isParenthesisOpen) {\n        // 在圆括号里面，忽略\n      } else {\n        addNewAttr();\n      }\n    } else if (c === '\\n') {\n      addNewAttr();\n    }\n  }\n\n  return _.trim(retCSS);\n}\n\nmodule.exports = parseStyle;\n","/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\nvar DEFAULT = require('./default');\nvar parseStyle = require('./parser');\nvar _ = require('./util');\n\n\n/**\n * 返回值是否为空\n *\n * @param {Object} obj\n * @return {Boolean}\n */\nfunction isNull (obj) {\n  return (obj === undefined || obj === null);\n}\n\n/**\n * 浅拷贝对象\n *\n * @param {Object} obj\n * @return {Object}\n */\nfunction shallowCopyObject (obj) {\n  var ret = {};\n  for (var i in obj) {\n    ret[i] = obj[i];\n  }\n  return ret;\n}\n\n/**\n * 创建CSS过滤器\n *\n * @param {Object} options\n *   - {Object} whiteList\n *   - {Function} onAttr\n *   - {Function} onIgnoreAttr\n *   - {Function} safeAttrValue\n */\nfunction FilterCSS (options) {\n  options = shallowCopyObject(options || {});\n  options.whiteList = options.whiteList || DEFAULT.whiteList;\n  options.onAttr = options.onAttr || DEFAULT.onAttr;\n  options.onIgnoreAttr = options.onIgnoreAttr || DEFAULT.onIgnoreAttr;\n  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;\n  this.options = options;\n}\n\nFilterCSS.prototype.process = function (css) {\n  // 兼容各种奇葩输入\n  css = css || '';\n  css = css.toString();\n  if (!css) return '';\n\n  var me = this;\n  var options = me.options;\n  var whiteList = options.whiteList;\n  var onAttr = options.onAttr;\n  var onIgnoreAttr = options.onIgnoreAttr;\n  var safeAttrValue = options.safeAttrValue;\n\n  var retCSS = parseStyle(css, function (sourcePosition, position, name, value, source) {\n\n    var check = whiteList[name];\n    var isWhite = false;\n    if (check === true) isWhite = check;\n    else if (typeof check === 'function') isWhite = check(value);\n    else if (check instanceof RegExp) isWhite = check.test(value);\n    if (isWhite !== true) isWhite = false;\n\n    // 如果过滤后 value 为空则直接忽略\n    value = safeAttrValue(name, value);\n    if (!value) return;\n\n    var opts = {\n      position: position,\n      sourcePosition: sourcePosition,\n      source: source,\n      isWhite: isWhite\n    };\n\n    if (isWhite) {\n\n      var ret = onAttr(name, value, opts);\n      if (isNull(ret)) {\n        return name + ':' + value;\n      } else {\n        return ret;\n      }\n\n    } else {\n\n      var ret = onIgnoreAttr(name, value, opts);\n      if (!isNull(ret)) {\n        return ret;\n      }\n\n    }\n  });\n\n  return retCSS;\n};\n\n\nmodule.exports = FilterCSS;\n","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0\n *\n * js-xss\n * Copyright (c) 2012-2017 Zongmin Lei(雷宗民) <leizongmin@gmail.com>\n * http://ucdok.com\n * The MIT License, see\n * https://github.com/leizongmin/js-xss/blob/master/LICENSE for details\n * \n * Lodash/isPlainObject\n * Copyright (c) JS Foundation and other contributors <https://js.foundation/>\n * MIT License, see https://raw.githubusercontent.com/lodash/lodash/4.17.10-npm/LICENSE for details\n * */\nimport isPlainObject from 'lodash.isplainobject';\nimport xss from 'xss';\n\n/**\n * The response from the validate method\n *\n * @export\n * @interface IValidationResponse\n */\nexport interface IValidationResponse {\n  isValid: boolean;\n  sanitized: any;\n}\n\n/**\n * The Sanitizer Class\n *\n * @export\n * @class Sanitizer\n */\nexport class Sanitizer {\n  // Supported HTML Spec: https://doc.arcgis.com/en/arcgis-online/reference/supported-html.htm\n  public readonly arcgisWhiteList: XSS.IWhiteList = {\n    a: ['href', 'target', 'style'],\n    img: ['src', 'width', 'height', 'border', 'alt', 'style'],\n    video: [\n      'autoplay',\n      'controls',\n      'height',\n      'loop',\n      'muted',\n      'poster',\n      'preload',\n      'src',\n      'width'\n    ],\n    audio: ['autoplay', 'controls', 'loop', 'muted', 'preload', 'src'],\n    span: ['style'],\n    table: ['width', 'height', 'cellpadding', 'cellspacing', 'border', 'style'],\n    div: ['style', 'class'],\n    font: ['size', 'color', 'style'],\n    tr: ['height', 'valign', 'align', 'style'],\n    td: [\n      'height',\n      'width',\n      'valign',\n      'align',\n      'colspan',\n      'rowspan',\n      'nowrap',\n      'style'\n    ],\n    th: [\n      'height',\n      'width',\n      'valign',\n      'align',\n      'colspan',\n      'rowspan',\n      'nowrap',\n      'style'\n    ],\n    b: [],\n    strong: [],\n    i: [],\n    em: [],\n    br: [],\n    p: [],\n    li: [],\n    ul: [],\n    tbody: []\n  };\n  public readonly arcgisFilterOptions: XSS.IFilterXSSOptions = {\n    allowCommentTag: true\n  };\n  public readonly xssFilterOptions: XSS.IFilterXSSOptions;\n  private _xssFilter: XSS.ICSSFilter;\n\n  constructor(filterOptions?: XSS.IFilterXSSOptions, extendDefaults?: boolean) {\n    let xssFilterOptions: XSS.IFilterXSSOptions;\n\n    if (filterOptions && !extendDefaults) {\n      // Override the defaults\n      xssFilterOptions = filterOptions;\n    } else if (filterOptions && extendDefaults) {\n      // Extend the defaults\n      xssFilterOptions = Object.create(this.arcgisFilterOptions);\n      Object.keys(filterOptions).forEach(key => {\n        if (key === 'whiteList') {\n          // Extend the whitelist by concatenating arrays\n          xssFilterOptions.whiteList = this._extendObjectOfArrays([\n            this.arcgisWhiteList,\n            filterOptions.whiteList || {}\n          ]);\n        } else {\n          xssFilterOptions[key] = filterOptions[key];\n        }\n      });\n    } else {\n      // Only use the defaults\n      xssFilterOptions = Object.create(this.arcgisFilterOptions);\n      xssFilterOptions.whiteList = this.arcgisWhiteList;\n    }\n\n    this.xssFilterOptions = xssFilterOptions;\n    // Make this readable to tests\n    this._xssFilter = new xss.FilterXSS(xssFilterOptions);\n  }\n\n  /**\n   * Sanitizes value to remove invalid HTML tags.\n   *\n   * Note: If the value passed does not contain a valid JSON data type (String,\n   * Number, JSON Object, Array, Boolean, or null), the value will be nullified.\n   *\n   * @param {any} value The value to sanitize.\n   * @returns {any} The sanitized value.\n   * @memberof Sanitizer\n   */\n  public sanitize(value: any): any {\n    switch (typeof value) {\n      case 'number':\n        if (isNaN(value) || !isFinite(value)) {\n          return null;\n        }\n        return value;\n      case 'boolean':\n        return value;\n      case 'string':\n        return this._xssFilter.process(value);\n      case 'object':\n        return this._iterateOverObject(value);\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Checks if a value only contains valid HTML.\n   *\n   * @param {any} value The value to validate.\n   * @returns {boolean}\n   * @memberof Sanitizer\n   */\n  public validate(value: any): IValidationResponse {\n    const sanitized = this.sanitize(value);\n\n    return {\n      isValid: value === sanitized,\n      sanitized\n    };\n  }\n\n  /**\n   * Extends an object of arrays by by concatenating arrays of the same object\n   * keys. If the if the previous key's value is not an array, the next key's\n   * value will replace the previous key. This method is used for extending the\n   * whiteList in the XSS filter options.\n   *\n   * @private\n   * @param {Array<{}>} objects An array of objects.\n   * @returns {{}} The extended object.\n   * @memberof Sanitizer\n   */\n  private _extendObjectOfArrays(objects: Array<{}>): {} {\n    const finalObj = {};\n\n    objects.forEach(obj => {\n      Object.keys(obj).forEach(key => {\n        if (Array.isArray(obj[key]) && Array.isArray(finalObj[key])) {\n          finalObj[key] = finalObj[key].concat(obj[key]);\n        } else {\n          finalObj[key] = obj[key];\n        }\n      });\n    });\n\n    return finalObj;\n  }\n\n  /**\n   * Iterate over a plain object or array to deeply sanitize each value.\n   *\n   * @private\n   * @param {object} obj The object to iterate over.\n   * @returns {(object | null)} The sanitized object.\n   * @memberof Sanitizer\n   */\n  private _iterateOverObject(obj: object): object | null {\n    try {\n      let hasChanged = false;\n      let changedObj;\n      if (Array.isArray(obj)) {\n        changedObj = obj.reduce((prev, value) => {\n          const validation = this.validate(value);\n          if (validation.isValid) {\n            return prev.concat([value]);\n          } else {\n            hasChanged = true;\n            return prev.concat([validation.sanitized]);\n          }\n        }, []);\n      } else if (!isPlainObject(obj)) {\n        return null;\n      } else {\n        const keys = Object.keys(obj);\n        changedObj = keys.reduce((prev, key) => {\n          const value = obj[key];\n          const validation = this.validate(value);\n          if (validation.isValid) {\n            prev[key] = value;\n          } else {\n            hasChanged = true;\n            prev[key] = validation.sanitized;\n          }\n          return prev;\n        }, {});\n      }\n\n      if (hasChanged) {\n        return changedObj;\n      }\n      return obj;\n    } catch (err) {\n      return null;\n    }\n  }\n}\n"],"sourceRoot":""}